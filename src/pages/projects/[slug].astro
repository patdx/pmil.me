---
import 'tailwindcss/tailwind.css';

import humanizeUrl from 'humanize-url';
import {getImage} from "astro:assets"
import { type CollectionEntry, getCollection } from 'astro:content';
import { App } from '../../layouts/App';
import { Container } from '../../components/Container';
import { CoverImage } from '../../components/CoverImage';

export async function getStaticPaths() {
  const projectEntries = await getCollection('project');
  return projectEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<'project'>;
}

const { entry } = Astro.props;
const { slug, data } = entry;
const { title, externalUrl, technologies } = data;
const { Content } = await entry.render();

const url = `/posts/${slug}`;

const coverImage = data.coverImage ? await getImage({src: data.coverImage})  : undefined

---

<App>
  <Container class="grid gap-4 py-4">
    <article class="mb-32">
      {
        /* <NextSeo
        title={`${post.title} | Patrick Miller`}
        openGraph={{
          images: post.ogImage ? [{ url: post.ogImage.url }] : [],
        }}
      /> */
      }
      <h1
        class="mb-12 text-center text-6xl font-bold leading-tight tracking-tighter md:text-left md:text-7xl md:leading-none lg:text-8xl"
      >
        {title}
      </h1>

      <div class="grid grid-cols-1 gap-4 sm:grid-cols-3">
        <div class="col-span-2 grid content-start gap-4">
          <div class="prose"><Content /></div>
          {
            !externalUrl ? undefined : (
              <p>
                <a
                  href={externalUrl}
                  class="inline-block rounded-lg bg-green-600 py-2 px-6 font-bold text-white hover:bg-green-700"
                  target="_blank"
                >
                  View Project ({humanizeUrl(externalUrl)})
                </a>
              </p>
            )
          }
        </div>
        <div class="col-span-1 grid grid-cols-1 content-start gap-4">
          {
            coverImage ? (
              <CoverImage title={title} href={url} {...coverImage} />
            ) : undefined
          }
          {Boolean(technologies) && <p>{technologies}</p>}
        </div>
      </div>
    </article>
  </Container>
</App>
